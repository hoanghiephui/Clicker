plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id "org.jlleitschuh.gradle.ktlint" version "11.6.1"
}

android {
    namespace 'com.example.clicker'
    compileSdk 33
    buildFeatures {
        buildConfig = true

        viewBinding true
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }


    defaultConfig {
        applicationId "elliott.software.clicker"
        minSdk 24
        targetSdk 33
        versionCode 5
        versionName "1.4"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        Properties properties = new Properties()
        Properties properties2 = new Properties()
        Properties properties3 = new Properties()

        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        properties2.load(project.rootProject.file("local.properties").newDataInputStream())
        properties3.load(project.rootProject.file("local.properties").newDataInputStream())

        buildConfigField "String", "CLIENT_ID", "\"${properties.getProperty("CLIENT_ID")}\""
        buildConfigField "String", "REDIRECT_URL", "\"${properties2.getProperty("REDIRECT_URL")}\""
        buildConfigField "String", "CLIENT_SECRET", "\"${properties3.getProperty("CLIENT_SECRET")}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

ktlint{
    android =true
    ignoreFailures = false
    disabledRules =["final-newline","no-wildcard-imports","max-line-length"]
    reporters{
        reporter "checkstyle"
    }
}

dependencies {
    def fragment_version = "1.5.7"
    def work_version = "2.8.1"

    // Kotlin + coroutines work manager
    implementation "androidx.work:work-runtime-ktx:$work_version"

    //livedata
    implementation 'androidx.compose.runtime:runtime-livedata:1.0.0-beta01'


    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"

    implementation 'androidx.hilt:hilt-work:1.0.0'

    // Kotlin
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.8.22'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.22'

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
   // implementation 'androidx.compose.material3:material3'
//    implementation 'androidx.compose.material3:material3:1.2.0-alpha02'

    // Material Design
    implementation 'androidx.compose.material:material:1.5.0-alpha01'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //coil Image loading
    implementation "io.coil-kt:coil-compose:2.4.0"

    //navigation
    def nav_version = "2.6.0"

    implementation "androidx.navigation:navigation-compose:$nav_version"
    //above is what is already here

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    implementation 'androidx.appcompat:appcompat:1.6.1'


    //webview library
    implementation 'com.google.accompanist:accompanist-webview:0.31.5-beta'

    //DATA STORE

    implementation "androidx.datastore:datastore-preferences:1.0.0"

    testImplementation "org.mockito:mockito-core:3.+"

    testImplementation 'org.mockito.kotlin:mockito-kotlin:3.2.0'

    // https://mvnrepository.com/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-test
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3'



    implementation "androidx.core:core-splashscreen:1.0.0"


    // Mock web server
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.11.0'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3"


    implementation 'androidx.browser:browser:1.5.0'

    implementation("androidx.compose.material3:material3:1.1.2")





}
kapt {
    correctErrorTypes true
}